syntax = "proto3";

option go_package = "rpc/pb";
import "google/protobuf/duration.proto";

package pb;

message StringValue {
    string value = 1;
}

message Empty {}

message QueryParam{
    string name = 1;
    repeated string for_nodes = 2;
    repeated FilterTag filter_tags = 3;
    google.protobuf.Duration timeout = 4;
    uint32 num_relays = 5;
    bytes payload = 6;
}

message FilterTag {
    string name = 1;
    string expr = 2;
}

message KeyRequest {
    string command = 1;
    string key = 2;
}

message KeyResponse {
    uint32 num_nodes = 1;
    uint32 num_res = 2;
    uint32 num_err = 3;
    map<string, string> err_from = 4;
    map<string, uint32> primary_key_count = 5;
    map<string, uint32> key_count = 6;
}

message ActionRequest {
    string name = 1;
    bytes payload = 2;
}

message ReachResponse {
    uint32 num_node = 1;
    uint32 num_res = 2;
    repeated string acked = 3;
}

message TagFilter {
    string key = 1;
    string expr = 2;
}

message MemberRequest {
    repeated TagFilter tag_filters = 1;
}

message Member {
    string id = 1;
    string addr = 2;
    string tags = 3;
    string state = 4;
    uint32 lives = 5;
}

message MembersResponse {
    repeated Member members = 1;
}

message JoinRequest {
    repeated string addrs = 1;
    bool ignore_old = 2;
}

message IntValue {
    int32 value = 1;
}

message RttRequest {
    string first = 1;
    string second = 2;
}

message TagRequest {
    string command = 1;
    map<string, string> tags = 2;
    repeated string keys = 3;
}

message Info {
    Member node = 1;
    map<string, string> stats = 2;
}

message MonitorRequest {
    string event_filter = 1;
    string log_level = 2;
}

service Serf{
    rpc connect(Empty) returns (Empty);
    rpc query(QueryParam) returns (stream StringValue);
    rpc key(KeyRequest) returns (KeyResponse);
    rpc action(ActionRequest) returns (Empty);
    rpc reach(Empty) returns (ReachResponse);
    rpc active(Empty) returns (MembersResponse);
    rpc members(MemberRequest) returns (MembersResponse);
    rpc join(JoinRequest) returns (IntValue);
    rpc leave(Empty) returns (Empty);
    rpc rtt(RttRequest) returns (google.protobuf.Duration);
    rpc tag(TagRequest) returns (Empty);
    rpc info(Empty) returns (Info);
    rpc monitor(MonitorRequest) returns (stream StringValue);
}